"""add reminders table

Revision ID: 180c1483cfd0
Revises: 2fe5467c10b9
Create Date: 2025-10-27 14:34:53.206473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '180c1483cfd0'
down_revision: Union[str, Sequence[str], None] = '2fe5467c10b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reminders',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('type', sa.Enum('INCOME', 'EXPENSE', name='transactiontype'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('reminder_date', sa.Date(), nullable=False),
    sa.Column('recurrence', sa.Enum('NONE', 'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY', name='reminderrecurrence'), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.create_index('ix_reminder_completed', ['is_completed', 'reminder_date'], unique=False)
        batch_op.create_index('ix_reminder_user_date', ['user_id', 'reminder_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_reminders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reminders_reminder_date'), ['reminder_date'], unique=False)

    op.create_table('reminder_tags',
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('reminder_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reminder_tags')
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reminders_reminder_date'))
        batch_op.drop_index(batch_op.f('ix_reminders_id'))
        batch_op.drop_index('ix_reminder_user_date')
        batch_op.drop_index('ix_reminder_completed')

    op.drop_table('reminders')
    # ### end Alembic commands ###
