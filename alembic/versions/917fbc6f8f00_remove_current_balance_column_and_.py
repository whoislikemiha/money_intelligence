"""Remove current_balance column and rename create_at to created_at

Revision ID: 917fbc6f8f00
Revises: fee59ef7cace
Create Date: 2025-09-30 17:06:55.118394

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '917fbc6f8f00'
down_revision: Union[str, Sequence[str], None] = 'fee59ef7cace'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # SQLite-compatible migration using batch operations
    # Migrate existing data from create_at to created_at before dropping
    connection = op.get_bind()

    with op.batch_alter_table('accounts') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    connection.execute(sa.text('UPDATE accounts SET created_at = create_at'))
    with op.batch_alter_table('accounts') as batch_op:
        batch_op.drop_column('create_at')
        batch_op.drop_column('current_balance')

    with op.batch_alter_table('budgets') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    connection.execute(sa.text('UPDATE budgets SET created_at = create_at'))
    with op.batch_alter_table('budgets') as batch_op:
        batch_op.drop_column('create_at')

    with op.batch_alter_table('categories') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    connection.execute(sa.text('UPDATE categories SET created_at = create_at'))
    with op.batch_alter_table('categories') as batch_op:
        batch_op.drop_column('create_at')

    with op.batch_alter_table('tags') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    connection.execute(sa.text('UPDATE tags SET created_at = create_at'))
    with op.batch_alter_table('tags') as batch_op:
        batch_op.drop_column('create_at')

    with op.batch_alter_table('transaction_tags') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    connection.execute(sa.text('UPDATE transaction_tags SET created_at = create_at'))
    with op.batch_alter_table('transaction_tags') as batch_op:
        batch_op.drop_column('create_at')

    with op.batch_alter_table('transactions') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    connection.execute(sa.text('UPDATE transactions SET created_at = create_at'))
    with op.batch_alter_table('transactions') as batch_op:
        batch_op.drop_column('create_at')

    with op.batch_alter_table('users') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    connection.execute(sa.text('UPDATE users SET created_at = create_at'))
    with op.batch_alter_table('users') as batch_op:
        batch_op.drop_column('create_at')


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('create_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_column('users', 'created_at')
    op.add_column('transactions', sa.Column('create_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_column('transactions', 'created_at')
    op.add_column('transaction_tags', sa.Column('create_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_column('transaction_tags', 'created_at')
    op.add_column('tags', sa.Column('create_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_column('tags', 'created_at')
    op.add_column('categories', sa.Column('create_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_column('categories', 'created_at')
    op.add_column('budgets', sa.Column('create_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_column('budgets', 'created_at')
    op.add_column('accounts', sa.Column('current_balance', sa.NUMERIC(precision=12, scale=2), nullable=True))
    op.add_column('accounts', sa.Column('create_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.drop_column('accounts', 'created_at')
    # ### end Alembic commands ###
